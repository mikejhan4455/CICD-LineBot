name: Cloud Functions Deploy
on: [push]

jobs:
  Deploy-To-GCF:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: 'actions/checkout@v3'

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/871023067494/locations/global/workloadIdentityPools/gcf-deploy-pool/providers/gcf-deploy-provider'
        service_account: 'gcf-deploy@persistent-370411.iam.gserviceaccount.com'

    - name: Build GCF Environment File
      shell: bash
      run: |
        echo "CHANNEL_ACCESS_TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}" >> .env.yaml
        echo "CHANNEL_SECRET: ${{ secrets.CHANNEL_SECRET }}" >> .env.yaml
        echo "CHANNEL_ID: ${{ secrets.CHANNEL_ID }}" >> .env.yaml
        echo "PERSONAL_USERID: ${{ secrets.PERSONAL_USERID }}" >> .env.yaml
        echo "FIREBASE_URL: ${{ secrets.FIREBASE_URL }}" >> .env.yaml
        echo "FIRE_BASE_CERT_TYPE: ${{ secrets.FIRE_BASE_CERT_TYPE }}" >> .env.yaml
        echo "FIRE_BASE_CERT_PROJECT_ID: ${{ secrets.FIRE_BASE_CERT_PROJECT_ID }}" >> .env.yaml
        echo "FIRE_BASE_CERT_PRIVATE_KEY_ID: ${{ secrets.FIRE_BASE_CERT_PRIVATE_KEY_ID }}" >> .env.yaml
        echo "FIRE_BASE_CERT_PRIVATE_KEY: ${{ secrets.FIRE_BASE_CERT_PRIVATE_KEY }}" >> .env.yaml
        echo "FIRE_BASE_CERT_CLIENT_EMAIL: ${{ secrets.FIRE_BASE_CERT_CLIENT_EMAIL }}" >> .env.yaml
        echo "FIRE_BASE_CERT_CLIENT_ID: ${{ secrets.FIRE_BASE_CERT_CLIENT_ID }}" >> .env.yaml
        echo "FIRE_BASE_CERT_AUTH_URI: ${{ secrets.FIRE_BASE_CERT_AUTH_URI }}" >> .env.yaml
        echo "FIRE_BASE_CERT_TOKEN_URI: ${{ secrets.FIRE_BASE_CERT_TOKEN_URI }}" >> .env.yaml
        echo "FIRE_BASE_CERT_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIRE_BASE_CERT_AUTH_PROVIDER_X509_CERT_URL }}" >> .env.yaml
        echo "FIRE_BASE_CERT_CLIENT_X509_CERT_URL: ${{ secrets.FIRE_BASE_CERT_CLIENT_X509_CERT_URL }}" >> .env.yaml

    - id: deploy-using-api
      name: Deploy to GCF
      run: >-
        gcloud functions deploy "line-bot-using-api"
        --allow-unauthenticated
        --entry-point=callback
        --gen2
        --max-instances=1
        --memory=128Mi
        --no-user-output-enabled
        --region=us-central1
        --runtime=python310
        --timeout=60s
        --trigger-http

    - id: 'get-url'
      name: Get Cloud Function Url
      run: |
        URL=$(gcloud functions describe line-bot-using-api --gen2 --region=us-central1 --format="value(serviceConfig.uri)")
        echo "URL=$URL" >> $GITHUB_ENV

    - id: 'test'
      name: Test Deployment
      run:  |
            curl -X POST \
            -H 'Authorization: Bearer ${{ secrets.CHANNEL_ACCESS_TOKEN }}' \
            -H 'Content-Type:application/json' \
            -d '{"endpoint":"${{ env.URL }}"}' \
            https://api.line.me/v2/bot/channel/webhook/test


    - id: install-depandencies
      name: Install Python dependencies
      run: python -m pip install --upgrade pip requests python-dotenv-yaml

    - id: 'line-notify'
      name: 'Send Line Notify'
      run: |
        python send-text.py "Github Action result: ${{ steps.deploy-using-api.outcome }}"